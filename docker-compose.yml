services:
  db:
    image: postgres:17-alpine
    container_name: core_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - core_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: core_pgadmin
    env_file:
      - .env
    environment:
      PGADMIN_SERVER_JSON_FILE: /pgadmin4/servers.json
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin-servers.json:/pgadmin4/servers.json:ro
    depends_on:
      db:
        condition: service_healthy
    networks:
      - core_network

  web:
    build: .
    container_name: core_web
    command: uv run python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "${WEB_PORT:-8000}:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - core_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  pgadmin_data:

networks:
  core_network:
    driver: bridge
